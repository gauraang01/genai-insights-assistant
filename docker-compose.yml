version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 10

  chroma:
    image: ghcr.io/chroma-core/chroma:0.4.24
    restart: unless-stopped
    command: ["--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "${CHROMA_HTTP_PORT:-8000}:8000"
    volumes:
      - chroma_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 10


  streamlit:
    build:
      context: .
      dockerfile: docker/streamlit/Dockerfile
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      CHROMA_HTTP_URL: "http://chroma:${CHROMA_HTTP_PORT:-8000}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      USE_LOCAL_LLAMA: "${USE_LOCAL_LLAMA}"
      LLAMA_MODEL_PATH: "${LLAMA_MODEL_PATH}"
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    depends_on:
      postgres:
        condition: service_healthy
      chroma:
        condition: service_healthy
    volumes:
      - ./:/app
    command: ["poetry", "run", "streamlit", "run", "app/streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]

volumes:
  postgres_data:
  chroma_data:
